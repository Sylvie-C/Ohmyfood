@use 'variables' as *;
@use 'sass:list';

// -------  FONTS MIXINS  -------
@mixin homeSection-title {
  font-weight: bold;
  font-size: 1.25rem;
}

// -------  COMPONENTS  -------
// icons
@mixin icon {
  width: 20px;
  color: #808080;
}

// "Nouveau" sticker
@mixin new {
  font-size: 12px;
  color: $omf-darkgreen;
  background: $omf-lightgreen;

  border-radius: 2px;

  padding: 5px 10px;

  position: absolute;
  top: 2px;
  right: 10px;
}

// buttons
@mixin btn01 {
  border: none;
  border-radius: 100px;
  box-shadow: $bshadow ;

  text-align: center;
  text-decoration: none;
  color: white;
  font-size: .9rem;
  font-weight: 500;

  padding: 13px 20px;
  margin: 20px 0;

  background: linear-gradient(180deg, $second-color -30%, $primary-color 110%);

  transition: all 300ms ease-in-out;

  &:active,
  &:hover {
    filter: opacity(.8);
    box-shadow: $bshadow-dark ;
    cursor: pointer;
  }
}

// Heart icons : mixin must be placed in their container
@mixin heart-icons {

  @include alignx-xycenter;
  position: relative; // for hearts icon position

  // Default
  .heart-default,
  .heart-like {
    width: 22px;
    position: absolute;
    right: 10px;
  }

  .heart-default {
    fill: transparent;
    stroke: black;
    stroke-width: 2;

    &:hover {
      cursor: pointer;
    }
  }

  .heart-like {
    opacity: 0;
    transition: opacity 300ms linear;

    &:hover {
      cursor: pointer;
    }
  }
}

// Restaurants pages - dish card (title, description, price)
@mixin card02 {
  overflow: hidden;
  width: 100%;
  height: 70px;
  background-color: white;
  border-radius: 16px;
  margin: 6px 0;
  filter: drop-shadow(0px 3px 4px rgba(0, 0, 0, 0.1));

  &:hover {
    cursor: pointer;
  }
}

// animations

/*
  Sass function to set an incremented delay of 100ms to each element of the list. 
  Used in this project to make dishes appear by translation from left of the screen, 
  each dish appearing with a different delay. 
*/
@mixin cardsDelay ($list...) {

  @for $i from 1 through length($list) {
    // parse elements in list

    #{ nth( $list , $i ) } {
      // points to elt in list (call of sass list.nth() function)

      animation-delay: $i * 100ms; // animation delay incremented by 100ms for each elt
    }
  }

}


// Flexbox alignments
@mixin alignx {
  display: flex;
}

@mixin alignx-xycenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin alignx-ycenter {
  display: flex;
  align-items: center;
}

@mixin alignx-xcenter {
  display: flex;
  justify-content: center;
}

@mixin aligny {
  display: flex;
  flex-direction: column;
}

@mixin aligny-xcenter {
  display: flex;
  flex-direction: column;
  align-items: center;
}